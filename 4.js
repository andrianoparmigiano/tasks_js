let a = 1, s = '';
//вывод индексов каждой цифры в читаемом и удобном виде для проверки
for (let i = 1; i <= 10010; ++i) {
    for (let j = 0; j < String(i).length; ++j) {
        s += `${a}, `;
        a++;
    };
    console.log(s + " --> " + String(i));
    s = '';
};

//сама функция распознавания цифры на данном n месте при последовательности натуральных чисел
const N = (n) => {
    const for_number = () => {//функция прохода по каждой цифре найденного числа и сравнения индекса текущей цифры и данного n
        while (n !== id) {//сравнение n с местом текущей цифры найденного числа
            res = number % 10;//сохраняем результат 
            id--;//смещаем номер цифры на -1
            number = Math.floor(number / 10);//отбрасываем последнюю цифру найденного числа
        };
        res = number % 10;//перезаписываем результат
    };

    let k = 1,//количество цифр в числе
        t = (k) => 9 * k * 10 ** (k - 1),//функция подсчета количества занимаемых мест при заданном количестве цифр в числе
        sum = 0,//сумма всех мест занимаемых цифрами до 10^(k-1)
        number,//число, в котором будет находиться цифра на данном n месте
        id,//номер места разряда единиц в number, в последствии перебираются все места цифр в number, перезаписываясь в id
        res;//результат 

    while (n > sum) {//цикл подсчета суммы мест, занимаемых цифрами до 10^(k-1)
        sum += t(k);
        k++;
    };
    k--;
    number = Math.ceil((n - (sum - t(k))) / k) - 1;//вичисление разницы между числом, в котором находиться цифра на месте n, и 10^(k-1)
    id = (number + 1) * k + sum - t(k);//вычисления номера места разряда единиц в number
    number = number + 10 ** (k - 1);//вычисление числа, в котором находиться цифра на месте n
    for_number();//вызов функции прохода по каждой цифре найденного числа и сравнения индекса текущей цифры и данного n
    return res;//возврат результата
};


console.log(N(300));//6
console.log(N(310));//1
console.log(N(404));//7
